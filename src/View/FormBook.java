/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.EmptyException;
import Controller.QuantityException;
import Model.Book;
import Controller.DBConnection;
import Controller.DBConnection;
import Controller.DeleteException;
import java.awt.Color;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public class FormBook extends javax.swing.JPanel {

    /**
     * Creates new form Book
     */
    private DefaultTableModel tm;

    public FormBook() {
        initComponents();
        setSize(983, 587);
        String[] cols = {"STT", "Mã sách", "Tên sách", "Thể loại",  "Tác giả", "Nhà xuất bản", "Số lượng", "Giá tiền"};
        tm = new DefaultTableModel(cols, 0);
        jTable1.setModel(tm);
        buttonState(true);
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dtm);
        jTable1.setRowSorter(trs);
        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TenSach = new javax.swing.JTextField();
        TacGia = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        NXB = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        SoLuong = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        MaSach = new javax.swing.JTextField();
        btThem = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        btSua = new javax.swing.JButton();
        btLamMoi = new javax.swing.JButton();
        btHuy = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        GiaTien = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin sách", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N

        jLabel2.setText("Tên sách:");

        jLabel3.setText("Tác giả:");

        jLabel4.setText("Thể loại:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phát triển Phần mềm", "Mạng và Bảo mật Mạng", "Cơ sở Dữ liệu", "Trí tuệ Nhân tạo", "Phát triển Web", "Công nghệ Blockchain", " " }));

        jLabel5.setText("Nhà xuất bản:");

        jLabel6.setText("Số lượng:");

        jLabel8.setText("Mã sách:");

        btThem.setText("Thêm");
        btThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemActionPerformed(evt);
            }
        });

        btXoa.setText("Xoá");
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        btSua.setText("Sửa");
        btSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaActionPerformed(evt);
            }
        });

        btLamMoi.setText("Làm mới");
        btLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLamMoiActionPerformed(evt);
            }
        });

        btHuy.setText("Huỷ");
        btHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHuyActionPerformed(evt);
            }
        });

        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setText("Nhập mã sách/tên sách/thể loại/tác giả cần tìm");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jButton1.setText("Tìm kiếm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Giá tiền:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(MaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(TacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(88, 88, 88)
                                        .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(100, 100, 100)
                                        .addComponent(btSua, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 258, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TenSach, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NXB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel7))
                                            .addGap(32, 32, 32)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(GiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGap(14, 14, 14)
                                            .addComponent(btHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(96, 96, 96))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btHuy, btLamMoi, btSua, btThem, btXoa});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(MaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(TacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(NXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLamMoi)
                    .addComponent(btThem)
                    .addComponent(btXoa)
                    .addComponent(btSua)
                    .addComponent(btHuy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(12, 12, 12))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btHuy, btLamMoi, btSua, btThem, btXoa});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName(""); // NOI18N
        jPanel1.getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents
        
    private void buttonState(boolean b){
        btThem.setEnabled(b);
        btSua.setEnabled(b);
        btXoa.setEnabled(b);
        btHuy.setEnabled(!b);
        btLamMoi.setEnabled(b);
    }
           
    private void clearTextFields(){
        JTextField[] textFields = {MaSach, TenSach, TacGia, NXB, GiaTien};
        for(JTextField textField:textFields){
            textField.setText("");
        }
    }
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
         if(row >=0 && row<=jTable1.getRowCount()-1){
             MaSach.setText(tm.getValueAt(row, 1).toString());
             TenSach.setText(tm.getValueAt(row, 2).toString());
             jComboBox1.setSelectedItem(tm.getValueAt(row, 3));
             TacGia.setText(tm.getValueAt(row, 4).toString());
             NXB.setText(tm.getValueAt(row, 5).toString());
             SoLuong.setValue(tm.getValueAt(row, 6));
            GiaTien.setText( tm.getValueAt(row, 7).toString());
         }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            tm.setRowCount(0);
            Connection conn = DBConnection.getConnection();
            String sql_select = "SELECT * FROM book WHERE id LIKE ? OR name LIKE ? OR type LIKE ? OR author LIKE ?";
            PreparedStatement pst = conn.prepareStatement(sql_select);
            pst.setString(1, "%" + jTextField1.getText() + "%");
            pst.setString(2,  "%" + jTextField1.getText() + "%");
            pst.setString(3,  "%" + jTextField1.getText() + "%");
            pst.setString(4,  "%" + jTextField1.getText() + "%");
            
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                String id = rs.getString("id");
                String name = rs.getString("name");
                String type = rs.getString("type");
                String author = rs.getString("author");
                String publisher = rs.getString("publisher");
                int quantity = rs.getInt("quantity");
                int price = rs.getInt("price");
                Book b = new Book(id, name, author, publisher, type, tm.getRowCount()+1, quantity, price);
                tm.addRow(b.toObject());
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost

        if(jTextField1.getText().equals("")){
            jTextField1.setText("Nhập mã sách/tên sách/thể loại/tác giả cần tìm");
            jTextField1.setForeground(new Color(153,153,153));
        }

    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        if(jTextField1.getText().equals("Nhập mã sách/tên sách/thể loại/tác giả cần tìm")){
            jTextField1.setText("");
            jTextField1.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void btHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHuyActionPerformed
        // TODO add your handling code here:
        clearTextFields();
        buttonState(true);
        if(btThem.getText().equals("Lưu")){
            btThem.setText("Thêm");
        }
        if(btSua.getText().equals("Cập nhật")){
            btSua.setText("Sửa");
        }
    }//GEN-LAST:event_btHuyActionPerformed

    private void btLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLamMoiActionPerformed
        // TODO add your handling code here:
        try{
            tm.setRowCount(0);
            boolean isExist = false;
            Connection conn = DBConnection.getConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM book");
            while(rs.next()){
                isExist = true;
                String id = rs.getString("id");
                String name = rs.getString("name");
                String type = rs.getString("type");
                String author = rs.getString("author");
                String publisher = rs.getString("publisher");
                int quantity = rs.getInt("quantity");
                int price = rs.getInt("price");
                Book b = new Book(id, name, author, publisher, type, tm.getRowCount()+1, quantity, price);
                tm.addRow(b.toObject());
            }
            if(!isExist){
                JOptionPane.showMessageDialog(this, "Không tồn tại sách!");
            }

        }
        catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_btLamMoiActionPerformed

    private void btSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if(row >=0 && row<=jTable1.getRowCount()-1){
            if(btSua.getText().equals("Sửa")){
                btSua.setText("Cập nhật");
                buttonState(false);
                btSua.setEnabled(true);
            }
            else{
                int stt = (int) tm.getValueAt(row, 0);
                String maSach = MaSach.getText();
                String tenSach = TenSach.getText();
                String tacGia = TacGia.getText();
                String nxb = NXB.getText();
                String tl = (String) jComboBox1.getSelectedItem();
                int soLuong = (int) SoLuong.getValue();
                int gia = Integer.parseInt(GiaTien.getText());
                try{
                    if(soLuong<0 || gia<0) throw new QuantityException();
                }
                catch(QuantityException e){
                    JOptionPane.showMessageDialog(this,"Nhập số dương");
                }
                Book b = new Book(maSach, tenSach, tacGia, nxb, jComboBox1.getSelectedItem().toString(), stt, soLuong, gia);

                try{
                    Connection conn = DBConnection.getConnection();
                    String sql_update = "UPDATE book SET name = ?, type = ? , author = ?, publisher = ?, quantity = ?, price = ? WHERE id = ?";
                    PreparedStatement pst = conn.prepareStatement(sql_update);
                    pst.setString(1, tenSach);
                    pst.setString(2, tl);
                    pst.setString(3, tacGia);
                    pst.setString(4, nxb);
                    pst.setInt(5, soLuong);
                    pst.setInt(6, gia);
                    pst.setString(7, maSach);
                    pst.executeUpdate();
                }
                catch(Exception e){
                    e.printStackTrace();
                }
                tm.removeRow(row);
                tm.insertRow(row, b.toObject());
                btSua.setText("Sửa");
                buttonState(true);
                JOptionPane.showMessageDialog(this, "Sửa sách thành công");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Chọn sách để sửa");
        }
    }//GEN-LAST:event_btSuaActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if(row >=0 && row<=jTable1.getRowCount()-1){
            String maSach = (String) tm.getValueAt(row, 1);
            try{
                boolean isExist = true;
                Connection conn = DBConnection.getConnection();
                PreparedStatement pst = conn.prepareStatement("SELECT COUNT(*) FROM issue_book_detail WHERE book_id = ? AND status = ?");
                pst.setString(1, maSach);
                pst.setString(2, "Chưa trả");
                ResultSet rs = pst.executeQuery();
                int count = 0;
                if(rs.next()){
                    count = rs.getInt(1);    
                }
                if(count==0){
                    isExist = false;
                }
                if(isExist) throw new DeleteException();
                else{
                    String sql_delete = "DELETE FROM book WHERE id = ?";
                    pst = conn.prepareStatement(sql_delete);
                    pst.setString(1, maSach);
                    pst.executeUpdate();
                    tm.removeRow(row);
                    JOptionPane.showMessageDialog(this, "Xoá sách thành công");
                }                                   
            }
            catch(DeleteException e){
                JOptionPane.showMessageDialog(this, "Sách đang mượn không được xoá");
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Chọn sách để xoá");
        }
    }//GEN-LAST:event_btXoaActionPerformed

    private void btThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemActionPerformed
        // TODO add your handling code here
        if(btThem.getText().equals("Thêm")){
            clearTextFields();
            try{
                Connection conn = DBConnection.getConnection();
                String sql_select = "SELECT MAX(id) FROM book";
                PreparedStatement pst = conn.prepareStatement(sql_select);
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    String id = rs.getString(1);
                    if(id!=null){
                        MaSach.setText("S" + String.format("%05d", Integer.parseInt(id.substring(1))+1));
                    }
                    else{
                        MaSach.setText("S00001");
                    }
                }
            }
            catch(Exception e){
                e.printStackTrace();
            }
            btThem.setText("Lưu");
            TenSach.requestFocus();
            buttonState(false);
            btThem.setEnabled(true);
        }
        else{
            try{
                String maSach = MaSach.getText();
                String tenSach = TenSach.getText();
                String tacGia = TacGia.getText();
                String nxb = NXB.getText();
                String theLoai = jComboBox1.getSelectedItem().toString();
                if(tenSach.isEmpty() || tacGia.isEmpty() || nxb.isEmpty()) throw new EmptyException();
                int soLuong = (int) SoLuong.getValue();
                int gia = Integer.parseInt(GiaTien.getText());
                if(soLuong<=0 || gia<=0) throw new QuantityException();
                Book b = new Book(maSach, tenSach, tacGia, nxb, theLoai, tm.getRowCount()+1, soLuong, gia);

                Connection conn = DBConnection.getConnection();
                String sql_insert = "INSERT INTO book(id, name, type, author, publisher, quantity, price) VALUES(?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement pst = conn.prepareStatement(sql_insert);
                pst.setString(1, maSach);
                pst.setString(2, tenSach);
                pst.setString(3,theLoai);
                pst.setString(4,tacGia);
                pst.setString(5,nxb);
                pst.setInt(6,soLuong);
                pst.setInt(7, gia);
                pst.executeUpdate();
                tm.addRow(b.toObject());
                btThem.setText("Thêm");
                buttonState(true);
                clearTextFields();
                JOptionPane.showMessageDialog(this, "Thêm sách thành công");
            }
            catch(EmptyException e){
                JOptionPane.showMessageDialog(this, "Không được để trống!");
            } catch (QuantityException ex) {
                JOptionPane.showMessageDialog(this,"Nhập số dương");
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btThemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField GiaTien;
    private javax.swing.JTextField MaSach;
    private javax.swing.JTextField NXB;
    private javax.swing.JSpinner SoLuong;
    private javax.swing.JTextField TacGia;
    private javax.swing.JTextField TenSach;
    private javax.swing.JButton btHuy;
    private javax.swing.JButton btLamMoi;
    private javax.swing.JButton btSua;
    private javax.swing.JButton btThem;
    private javax.swing.JButton btXoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
