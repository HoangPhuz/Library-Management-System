/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.DateException;
import Controller.EmptyException;
import Controller.EmailException;
import Controller.PhoneException;
import Model.Reader;
import Controller.DBConnection;
import Controller.DeleteException;
import Controller.ValidateException;
import java.awt.Color;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public class FormReader extends javax.swing.JPanel {

    /**
     * Creates new form Book
     */
    private DefaultTableModel tm;

    public FormReader() {
        initComponents();
        setSize(983, 587);
        String[] cols = {"STT", "Mã độc giả", "Tên độc giả", "Ngày sinh",  "Giới tính", "Địa chỉ", "Email", "SĐT", "Ngày lập thẻ", "Ngày hết hạn"};
        tm = new DefaultTableModel(cols, 0);
        jTable1.setModel(tm);
        buttonState(true);
        
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dtm);
        jTable1.setRowSorter(trs);
        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        DiaChi = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btThem = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        btSua = new javax.swing.JButton();
        btLamMoi = new javax.swing.JButton();
        btHuy = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TenDG = new javax.swing.JTextField();
        MaDG = new javax.swing.JTextField();
        SDT = new javax.swing.JTextField();
        NgaySinh = new com.toedter.calendar.JDateChooser();
        NgayLapThe = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(1005, 542));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin độc giả", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N

        jLabel2.setText("Số điện thoại:");

        jLabel3.setText("Địa chỉ:");

        jLabel4.setText("Giới tính:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        jLabel5.setText("Email:");

        jLabel8.setText("Tên độc giả:");

        btThem.setText("Thêm");
        btThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemActionPerformed(evt);
            }
        });

        btXoa.setText("Xoá");
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        btSua.setText("Sửa");
        btSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaActionPerformed(evt);
            }
        });

        btLamMoi.setText("Làm mới");
        btLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLamMoiActionPerformed(evt);
            }
        });

        btHuy.setText("Huỷ");
        btHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHuyActionPerformed(evt);
            }
        });

        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setText("Nhập mã độc giả/tên độc giả/sđt cần tìm");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jButton1.setText("Tìm kiếm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Ngày sinh:");

        jLabel9.setText("Ngày lập thẻ:");

        jLabel6.setText("Mã độc giả:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                        .addGap(224, 224, 224))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btThem)
                                .addGap(90, 90, 90)
                                .addComponent(btXoa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TenDG, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(SDT)
                                    .addComponent(MaDG))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NgayLapThe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(54, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                        .addComponent(btHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(btLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(122, 122, 122))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btHuy, btLamMoi, btSua, btThem, btXoa, jButton1});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(DiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(MaDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(NgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(TenDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(SDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(NgayLapThe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btXoa)
                    .addComponent(btSua)
                    .addComponent(btLamMoi)
                    .addComponent(btHuy)
                    .addComponent(btThem))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btHuy, btLamMoi, btSua, btThem, btXoa, jButton1});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents
        
    private void buttonState(boolean b){
        btThem.setEnabled(b);
        btSua.setEnabled(b);
        btXoa.setEnabled(b);
        btHuy.setEnabled(!b);
        btLamMoi.setEnabled(b);
    }
    private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
 
           
    private void clearTextFields(){
        JTextField[] textFields = {MaDG, TenDG, SDT, DiaChi, Email};
        for(JTextField textField:textFields){
            textField.setText("");
        }
    }
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
         if(row >=0 && row<=jTable1.getRowCount()-1){
             MaDG.setText((String) tm.getValueAt(row, 1));
             TenDG.setText(tm.getValueAt(row, 2).toString());
             SDT.setText(tm.getValueAt(row, 7).toString());
             jComboBox1.setSelectedItem(tm.getValueAt(row, 4));
             DiaChi.setText(tm.getValueAt(row, 5).toString());
             Email.setText(tm.getValueAt(row, 6).toString());
            try {
                NgaySinh.setDate(sdf.parse(tm.getValueAt(row, 3).toString()));
                NgayLapThe.setDate(sdf.parse(tm.getValueAt(row, 8).toString()));
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
         }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            tm.setRowCount(0);
            //Class.forName( "com.mysql.cj.jdbc.Driver");
            Connection conn = DBConnection.getConnection();

            String sql_select = "SELECT * FROM reader WHERE id LIKE ? OR name LIKE ? OR phone LIKE ?";

            PreparedStatement pst = conn.prepareStatement(sql_select);
            pst.setString(1, "%" + jTextField1.getText() + "%" );
            pst.setString(2, "%" + jTextField1.getText() + "%" );
            pst.setString(3, "%" + jTextField1.getText() + "%" );
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                String id = rs.getString("id");
                String name = rs.getString("name");
                String birth_date = sdf.format(rs.getDate("birth_date"));
                String gender = rs.getString("gender");
                String address = rs.getString("address");
                String email = rs.getString("email");
                String phone = rs.getString("phone");
                String create_date = sdf.format(rs.getDate("create_date"));
                String out_of_date = sdf.format(rs.getDate("out_of_date"));

                Reader rd = new Reader(id, name, gender, address, email, phone, birth_date, create_date, out_of_date, tm.getRowCount()+1);
                tm.addRow(rd.toObject());
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost

        if(jTextField1.getText().equals("")){
            jTextField1.setText("Nhập mã độc giả/tên độc giả/sđt cần tìm");
            jTextField1.setForeground(new Color(153,153,153));
        }

    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained

        if(jTextField1.getText().equals("Nhập mã độc giả/tên độc giả/sđt cần tìm")){
            jTextField1.setText("");
            jTextField1.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void btHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHuyActionPerformed
        // TODO add your handling code here:
        clearTextFields();
        buttonState(true);
        if(btThem.getText().equals("Lưu")){
            btThem.setText("Thêm");
        }
        if(btSua.getText().equals("Cập nhật")){
            btSua.setText("Sửa");
        }
    }//GEN-LAST:event_btHuyActionPerformed

    private void btLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLamMoiActionPerformed
        // TODO add your handling code here:
        try{
            tm.setRowCount(0);
            boolean isExist = false;

            //Class.forName( "com.mysql.cj.jdbc.Driver");
            Connection conn = DBConnection.getConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM reader");
            while(rs.next()){
                isExist = true;
                String id = rs.getString("id");
                String name = rs.getString("name");
                String birth_date = sdf.format(rs.getDate("birth_date"));
                String gender = rs.getString("gender");
                String address = rs.getString("address");
                String email = rs.getString("email");
                String phone = rs.getString("phone");
                String create_date = sdf.format(rs.getDate("create_date"));
                String out_of_date = sdf.format(rs.getDate("out_of_date"));

                Reader rd = new Reader(id, name, gender, address, email, phone, birth_date, create_date, out_of_date, tm.getRowCount()+1);
                tm.addRow(rd.toObject());
            }
            if(!isExist){
                JOptionPane.showMessageDialog(this, "Không tồn tại độc giả!");
            }

        }
        catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_btLamMoiActionPerformed

    private void btSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if(row >=0 && row<=jTable1.getRowCount()-1){
            if(btSua.getText().equals("Sửa")){
                btSua.setText("Cập nhật");
                buttonState(false);
                btSua.setEnabled(true);
            }
            else{
                int stt = (int) tm.getValueAt(row, 0);
                String maDG = MaDG.getText();
                String tenDG = TenDG.getText();
                String ngaySinh = sdf.format(NgaySinh.getDate());
                String gioiTinh = jComboBox1.getSelectedItem().toString();
                String diaChi = DiaChi.getText();
                String email = Email.getText();
                String sdt = SDT.getText();
                
                try{
                    if(checkPhone(sdt)){
                        if(sdt.length()<10 || sdt.length()>10) throw new PhoneException();
                    }
                    else{
                        throw new ValidateException();
                    }
                }
                catch(PhoneException e){
                     JOptionPane.showMessageDialog(this, "SĐT PHẢI 10 SỐ!");
                     return;
                }
                catch(ValidateException e){
                    JOptionPane.showMessageDialog(this, "SĐT PHẢI LÀ KÍ TỰ SỐ!");
                    return;
                }
                
                
                String ngay_lap = sdf.format(NgayLapThe.getDate());
                Calendar cal = Calendar.getInstance();
                cal.setTime(NgayLapThe.getDate());
                cal.add(Calendar.MONTH, 3);
                String ngay_het =sdf.format(cal.getTime());
                
                
                try{
                    if(tenDG.isEmpty() || diaChi.isEmpty() || sdt.isEmpty() || email.isEmpty()) throw new EmptyException();
                    if(NgaySinh.getDate().compareTo(NgayLapThe.getDate()) > 0) throw new DateException();
                    if(!email.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) throw new EmailException();
                }
                catch(EmptyException e){
                    JOptionPane.showMessageDialog(this, "Không được để trống!");
                }
                catch(DateException e){
                    JOptionPane.showMessageDialog(this,"Ngày lập thẻ không hợp lệ!");
                }
                catch(EmailException e){
                    JOptionPane.showMessageDialog(this, "Emai không chính xác");
                }
               
                
                
                
                try{
                    if(NgaySinh.getDate().compareTo(NgayLapThe.getDate()) > 0) throw new DateException();
                }
                catch(DateException e){
                    JOptionPane.showMessageDialog(this,"Ngày lập thẻ không hợp lệ!");
                }
                Reader rd = new Reader(maDG, tenDG, gioiTinh, diaChi, email, sdt, ngaySinh, ngay_lap, ngay_het, stt);

                try{
                    //Class.forName( "com.mysql.cj.jdbc.Driver");
                    Connection conn = DBConnection.getConnection();
                    String sql_update = "UPDATE reader SET name = ?, birth_date = ? , gender = ?, address = ?, email = ?, phone = ?, create_date = ? , out_of_date = ? WHERE id = ?";
                    PreparedStatement pst = conn.prepareStatement(sql_update);

                    pst.setString(1, tenDG);
                    pst.setDate(2, new java.sql.Date(NgaySinh.getDate().getTime()));
                    pst.setString(3,gioiTinh);
                    pst.setString(4,diaChi);
                    pst.setString(5,email);
                    pst.setString(6,sdt);
                    pst.setDate(7, new java.sql.Date(NgayLapThe.getDate().getTime()));
                    pst.setDate(8, new java.sql.Date(sdf.parse(ngay_het).getTime()));
                    pst.setString(9, maDG);
                    pst.executeUpdate();
                }
                catch(Exception e){
                    e.printStackTrace();
                }
                tm.removeRow(row);
                tm.insertRow(row, rd.toObject());
                btSua.setText("Sửa");
                buttonState(true);
                JOptionPane.showMessageDialog(this, "Sửa độc giả thành công");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Chọn độc giả để sửa");
        }
    }//GEN-LAST:event_btSuaActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if(row >=0 && row<=jTable1.getRowCount()-1){
            String maDG = (String) tm.getValueAt(row, 1);
            try{
                 boolean isExist = true;
                //Class.forName( "com.mysql.cj.jdbc.Driver");
                Connection conn = DBConnection.getConnection();
                String sql_select = "SELECT issue_book.reader_id, issue_book_detail.status FROM issue_book RIGHT JOIN issue_book_detail ON issue_book.issue_id = issue_book_detail.issue_id WHERE issue_book.reader_id = ? AND issue_book_detail.status = ?;";
                PreparedStatement pst = conn.prepareStatement(sql_select);
                pst.setString(1, maDG);
                pst.setString(2, "Chưa trả");
                ResultSet rs = pst.executeQuery();
                int count = 0;
                if(rs.next()){
                    count = rs.getInt(1);    
                }
                if(count==0){
                    isExist = false;
                }
                if(isExist) throw new DeleteException();
                else{
                    
                    String sql_delete = "DELETE FROM reader WHERE id = ?";
                    pst = conn.prepareStatement(sql_delete);
                    pst.setString(1, maDG);
                    pst.executeUpdate();
                    tm.removeRow(row);
                    JOptionPane.showMessageDialog(this, "Xoá độc giả thành công");
                }
                
          
            }
            catch(DeleteException e){
                JOptionPane.showMessageDialog(this, "Độc giả đang mượn sách không được xoá");
            }
            catch(Exception e){
                e.printStackTrace();
            }
           
            // for(int i=1; i<=tm.getRowCount(); i++){
                //        tm.setValueAt(i, row, 0);
                //    }
        }
        else{
            JOptionPane.showMessageDialog(this, "Chọn độc giả để xoá");
        }
    }//GEN-LAST:event_btXoaActionPerformed

    private static boolean checkPhone(String phone){
        for(int i=0; i<phone.length(); i++){
            if(phone.charAt(i)>='0' && phone.charAt(i)<='9'){
                continue;
            }
            else{
                return false;
            }
        }
        return true;
    }
    
    private void btThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemActionPerformed
        // TODO add your handling code here
        if(btThem.getText().equals("Thêm")){
            clearTextFields();
            try{
                //Class.forName( "com.mysql.cj.jdbc.Driver");
                Connection conn = DBConnection.getConnection();
                String sql_select = "SELECT MAX(id) FROM reader";
                PreparedStatement pst = conn.prepareStatement(sql_select);
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    String id = rs.getString(1);
                    if(id!=null){
                        MaDG.setText("DG" + String.format("%05d", Integer.parseInt(id.substring(2))+1));
                    }
                    else{
                        MaDG.setText("DG00001");
                    }

                }
            }
            catch(Exception e){
                e.printStackTrace();
            }

            btThem.setText("Lưu");
            TenDG.requestFocus();
            buttonState(false);
            btThem.setEnabled(true);
        }
        else{
            try{
                String maDG = MaDG.getText();
                String tenDG = TenDG.getText();
                String ngaySinh = sdf.format(NgaySinh.getDate());
                String gioiTinh = jComboBox1.getSelectedItem().toString();
                String diaChi = DiaChi.getText();
                String email = Email.getText();
                String sdt = SDT.getText();
                if(checkPhone(sdt)){
                    if(sdt.length()<10 || sdt.length()>10) throw new PhoneException();
                }
                else{
                    throw new ValidateException();
                }
                //System.out.println(sdt.length());
                
                String ngay_lap = sdf.format(NgayLapThe.getDate());
                Calendar cal = Calendar.getInstance();
                cal.setTime(NgayLapThe.getDate());
                cal.add(Calendar.MONTH, 3);
                
                String ngay_het =sdf.format(cal.getTime());
                if(tenDG.isEmpty() || diaChi.isEmpty() || sdt.isEmpty() || email.isEmpty()) throw new EmptyException();
                if(NgaySinh.getDate().compareTo(NgayLapThe.getDate()) > 0) throw new DateException();
                if(!email.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) throw new EmailException();
                //if(sdt.length()<10 || sdt.length()>10) throw new PhoneException();
                
                Reader rd = new Reader(maDG, tenDG, gioiTinh, diaChi, email, sdt, ngaySinh, ngay_lap, ngay_het, tm.getRowCount()+1);
                
                
                
                //Class.forName( "com.mysql.cj.jdbc.Driver");
                Connection conn = DBConnection.getConnection();
                String sql_insert = "INSERT INTO reader(id, name, birth_date, gender, address, email, phone, create_date, out_of_date) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement pst = conn.prepareStatement(sql_insert);
                pst.setString(1, maDG);
                pst.setString(2, tenDG);
                pst.setDate(3, new java.sql.Date(NgaySinh.getDate().getTime()));
                pst.setString(4,gioiTinh);
                pst.setString(5,diaChi);
                pst.setString(6,email);
                pst.setString(7,sdt);
                pst.setDate(8, new java.sql.Date(NgayLapThe.getDate().getTime()));
                pst.setDate(9, new java.sql.Date(sdf.parse(ngay_het).getTime()));
                pst.executeUpdate();
                tm.addRow(rd.toObject());
                btThem.setText("Thêm");
                buttonState(true);
                clearTextFields();
                JOptionPane.showMessageDialog(this, "Thêm độc giả thành công");
            }
            catch(EmptyException e){
                JOptionPane.showMessageDialog(this, "Không được để trống!");
            } catch (DateException ex) {
                JOptionPane.showMessageDialog(this,"Ngày lập thẻ không hợp lệ!");
            }
            catch(EmailException e){
                JOptionPane.showMessageDialog(this, "EMAIL KHÔNG CHÍNH XÁC");
            }
            catch(PhoneException e){
                JOptionPane.showMessageDialog(this, "SĐT PHẢI 10 SỐ!");
            }
            catch(ValidateException e){
                JOptionPane.showMessageDialog(this, "SĐT PHẢI LÀ KÍ TỰ SỐ!");
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btThemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DiaChi;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField MaDG;
    private com.toedter.calendar.JDateChooser NgayLapThe;
    private com.toedter.calendar.JDateChooser NgaySinh;
    private javax.swing.JTextField SDT;
    private javax.swing.JTextField TenDG;
    private javax.swing.JButton btHuy;
    private javax.swing.JButton btLamMoi;
    private javax.swing.JButton btSua;
    private javax.swing.JButton btThem;
    private javax.swing.JButton btXoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private Object getValueAt(int row, int i) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
